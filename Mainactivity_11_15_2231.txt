package com.example.ch.musicplayer_proto_v2;

import android.content.ContentResolver;
import android.content.ContentUris;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.media.AudioManager;
import android.media.MediaPlayer;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.provider.MediaStore;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.NavigationView;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.SeekBar;
import android.widget.SimpleCursorAdapter;
import android.widget.TextView;
import android.widget.Toast;

import com.squareup.picasso.Picasso;

import java.util.ArrayList;
import java.util.List;

public class MainActivity extends AppCompatActivity
        implements NavigationView.OnNavigationItemSelectedListener{
    public static ArrayList<MusicDB> musicList;
    private ArrayList<Integer> playList = null;
//    private final Uri artworkUri = Uri.parse("content://media/external/audio/albumart");
    private ArrayList<Integer> checkedList = null;
    ImageView imageView;

    AudioManager am;
    MusicPlayer player;

    TextView dispTxt;
    ImageButton playBtn;
    ImageButton loopBtn;

    ImageButton volumeUp, volumeDown;
    TextView volumeTxt;
    ListView showListView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);


        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if(player.isLoop){
                    player.isLoop = false;
                } else{
                    player.isLoop = true;
                }
                player.player.setLooping(player.isLoop);
            }
        });

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.setDrawerListener(toggle);
        toggle.syncState();

        dispTxt = (TextView)findViewById(R.id.dispTxt);
        imageView = (ImageView)findViewById(R.id.albumimage);

        player = new MusicPlayer();

        am = (AudioManager)getSystemService(AUDIO_SERVICE);

        playBtn = (ImageButton)findViewById(R.id.pause);
        loopBtn = (ImageButton)findViewById(R.id.imageButton5);

        player.setMusicProgress((SeekBar)findViewById(R.id.seekBar));
        player.setView(this, dispTxt,imageView);


        /*
        ContentResolver cr = getContentResolver();
        Cursor mCr = cr.query(MediaStore.Audio.Media.EXTERNAL_CONTENT_URI,null,null,null,null);
        SimpleCursorAdapter Adapter = new SimpleCursorAdapter(this, android.R.layout.simple_list_item_1, mCr,
                new String[]{MediaStore.MediaColumns.DISPLAY_NAME},
                new int[] {android.R.id.text1});
        list.setAdapter(Adapter);
        list.setOnItemClickListener(mItemClickListener);
        Adapter.notifyDataSetChanged();
*/
        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);
        showListView = (ListView)findViewById(R.id.musiclist);

        /*
        SeekBar volumeSeek = (SeekBar)findViewById(R.id.volumeSeek);
        volumeSeek.setMax(am.getStreamMaxVolume(AudioManager.STREAM_MUSIC));
        volumeSeek.setProgress(am.getStreamVolume(AudioManager.STREAM_MUSIC));
        volumeSeek.setOnSeekBarChangeListener(onVolumeSeek);
*/
        volumeTxt = (TextView)findViewById(R.id.volumeTxt);
        volumeUp = (ImageButton) findViewById(R.id.volumeUp);
        volumeDown = (ImageButton)findViewById(R.id.volumeDown);

        //< NotFoundException : TextView.setText(int)일 때 발생
        try {
            volumeTxt.setText(Integer.toString(am.getStreamVolume(AudioManager.STREAM_MUSIC)));
        }catch (Exception e){
            Toast.makeText(this, e.toString(), Toast.LENGTH_LONG).show();
        }
        volumeUp.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                try {
                    int volume = Integer.parseInt((String) volumeTxt.getText());
                    if (volume < 20)
                        am.setStreamVolume(AudioManager.STREAM_MUSIC, ++volume, 0);
                    volumeTxt.setText(Integer.toString(volume));
                }
                catch(Exception e)
                {
                    Toast.makeText(getBaseContext(), e.toString(), Toast.LENGTH_LONG).show();
                }
            }
        });

        volumeDown.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                try{
                int volume = Integer.parseInt((String) volumeTxt.getText());
                if (volume > 0)
                    am.setStreamVolume(AudioManager.STREAM_MUSIC, --volume, 0);
                volumeTxt.setText(Integer.toString(volume));
            }
                catch(Exception e)
                {
                    Toast.makeText(getBaseContext(), e.toString(), Toast.LENGTH_LONG).show();
                }
            }
        });

        getMusicList();
        player.setMusicList(musicList);
    }


    public void onClicked(View view){
        switch(view.getId()){
            case R.id.pause:
                player.play_pause();
                break;
            case R.id.previous:
                player.previous();
                break;
            case R.id.next:
                player.next();
                break;
        }
    }

    public void onDestroy(){
        super.onDestroy();
        player.release();
    }

    @Override
    public void onBackPressed() {
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        if (drawer.isDrawerOpen(GravityCompat.START)) {
            drawer.closeDrawer(GravityCompat.START);
        } else {
            super.onBackPressed();
        }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.actionbar_menu, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {   //actionbar event 처리
        switch (item.getItemId()) {
            case R.id.add_action:
                Intent intent = new Intent(MainActivity.this, ListViewActivity.class);
                startActivityForResult(intent, 0);
                //startActivity(intent);
                break;
            case R.id.wifi_search_action:
                break;
        }
        return super.onOptionsItemSelected(item);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data){  //생성된 activity에게서 정보 받아옴
        switch(requestCode){
            case 0:
                if(resultCode == RESULT_OK){
                    try{
                    playList = (ArrayList<Integer>) data.getIntegerArrayListExtra("playList");
                    String temp="";
                    for(int i=0; i<playList.size();i++)
                        temp+=playList.get(i)+", ";

                    Toast.makeText(this, temp, Toast.LENGTH_LONG).show();

                        player.setPlayList(playList);
                    }
                    catch (Exception e){
                        Toast.makeText(this, e.getMessage(), Toast.LENGTH_LONG).show();
                    }
                }
                break;
        }
    }

    ///음악 db 생성
    public void getMusicList(){
        musicList = new ArrayList<>();
        String[] projection = new String[]{
                MediaStore.Audio.Media._ID,
                MediaStore.Audio.Media.TITLE,
                MediaStore.Audio.Media.ARTIST,
                MediaStore.Audio.Media.ALBUM,
                MediaStore.Audio.Media.ALBUM_ID,
                MediaStore.Audio.Media.DURATION,
                MediaStore.Audio.Media.DATA
        };
        Cursor cursor = getContentResolver().query(MediaStore.Audio.Media.EXTERNAL_CONTENT_URI, projection, null ,null, null);
        while(cursor.moveToNext()){
            musicList.add(MusicDB.bindCursor(cursor));
        }
        cursor.close();
    }

    SeekBar.OnSeekBarChangeListener onVolumeSeek = new SeekBar.OnSeekBarChangeListener() {
        @Override
        public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
            am.setStreamVolume(AudioManager.STREAM_MUSIC,progress,0);
        }

        @Override
        public void onStartTrackingTouch(SeekBar seekBar) {

        }

        @Override
        public void onStopTrackingTouch(SeekBar seekBar) {

        }
    };

    AdapterView.OnItemClickListener mItemClickListener = new AdapterView.OnItemClickListener() {
        @Override
        public void onItemClick(AdapterView<?> adapterView, View view, int position, long id) {
            player.play(position);
        }
    };

    @SuppressWarnings("StatementWithEmptyBody")
    @Override
    public boolean onNavigationItemSelected(MenuItem item) {
        // Handle navigation view item clicks here.
        int id = item.getItemId();

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        drawer.closeDrawer(GravityCompat.START);
        return true;
    }
}
